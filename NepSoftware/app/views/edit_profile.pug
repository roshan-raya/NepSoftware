extends layout

block content
  .container.mt-4
    h1.mb-4 Edit Profile
    
    .row
      .col-md-6.offset-md-3
        #alert-container
        .card
          .card-body
            form#edit-profile-form(action=`/users/${user.id}/update` method="post" enctype="multipart/form-data")
              .mb-3
                label.form-label(for="name") Name
                input#name.form-control(type="text" name="name" value=user.name required)
              
              .mb-3
                label.form-label(for="email") Email
                input#email.form-control(type="email" name="email" value=user.email required)
              
              .mb-3
                label.form-label(for="photo") Profile Photo
                .profile-photo-container
                  .profile-photo-wrapper
                    img#photo-preview(src=getProfilePhoto(user.profile_photo) alt="Profile photo preview")
                    .edit-overlay
                      i.fas.fa-pencil-alt
                  input#photo.form-control(type="file" name="photo" accept="image/*" style="display: none;")
                  p.photo-hint Supported formats: JPG, PNG, GIF (max 5MB)
              
              .d-flex.justify-content-between
                a.btn.btn-secondary(href=`/users/${user.id}`) Cancel
                button.btn.btn-primary(type="submit") Save Changes
    
    script.
      document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('edit-profile-form');
        const photoInput = document.getElementById('photo');
        const photoPreview = document.getElementById('photo-preview');
        const photoWrapper = document.querySelector('.profile-photo-wrapper');
        const alertContainer = document.getElementById('alert-container');
        
        // Handle form submission
        form.addEventListener('submit', async function(e) {
          e.preventDefault();
          
          try {
            const formData = new FormData(form);
            
            const response = await fetch(form.action, {
              method: 'POST',
              body: formData
            });
            
            const result = await response.json();
            
            if (result.success) {
              // Show success message
              alertContainer.innerHTML = `
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                  ${result.message}
                  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
              `;
              
              // Redirect to profile page after a short delay
              setTimeout(() => {
                window.location.href = `/users/${result.user.id}`;
              }, 1500);
            } else {
              // Show error message
              alertContainer.innerHTML = `
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                  ${result.error}
                  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
              `;
            }
          } catch (error) {
            console.error('Error:', error);
            alertContainer.innerHTML = `
              <div class="alert alert-danger alert-dismissible fade show" role="alert">
                An error occurred while updating your profile. Please try again.
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
              </div>
            `;
          }
        });
        
        // Handle photo upload preview
        if (photoInput && photoPreview && photoWrapper) {
          // Click on photo wrapper triggers file input
          photoWrapper.addEventListener('click', function() {
            photoInput.click();
          });
          
          // Handle file selection
          photoInput.addEventListener('change', function() {
            const file = this.files[0];
            if (file) {
              if (file.size > 5 * 1024 * 1024) {
                alert('File size must be less than 5MB');
                this.value = '';
                return;
              }
              
              const reader = new FileReader();
              reader.onload = function(e) {
                photoPreview.src = e.target.result;
              };
              reader.readAsDataURL(file);
            }
          });
        }
      }); 