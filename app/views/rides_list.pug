extends layout

block content
  .d-flex.justify-content-between.align-items-center.mb-4
    h1 Available Rides
    if userId 
      a.btn.btn-success(href='/rides/offer')
        i.fas.fa-plus.me-2
        | Offer a Ride
    else
      button.btn.btn-success.auth-required(data-action='offer')
        i.fas.fa-plus.me-2
        | Offer a Ride
  
  // Debug information
  .alert.alert-info
    p Debug Info:
    p Rides count: #{rides ? rides.length : 0}
    if rides && rides.length > 0
      p First ride ID: #{rides[0].id}
      p First ride pickup: #{rides[0].pickup_location}
      p First ride departure: #{rides[0].departure_time}
    if tag
      p Active tag filter: #{tag}
  
  .row.mb-4
    .col-md-6
      form(action='/rides', method='GET')
        .input-group
          input.form-control(type='text', name='search', placeholder='Search by location', value=search || '')
          if tag
            input(type='hidden', name='tag', value=tag)
          button.btn.btn-primary(type='submit') Search
    .col-md-6
      .d-flex.justify-content-end
        if tags && tags.length > 0
          select.form-select.w-auto(id='tagFilter')
            option(value='') Filter by tag
            each tagOption in tags
              option(value=tagOption, selected=tag === tagOption)= tagOption
          if tag
            a.btn.btn-outline-secondary.ms-2(href=`/rides${search ? '?search=' + search : ''}`) Clear Filter
  
  .row
    each ride in rides
      .col-lg-6.mb-4
        .card
          .card-header.d-flex.justify-content-between.align-items-center
            h5.mb-0 Ride ##{ride.id}
            - var departureDate = new Date(ride.departure_time)
            span.badge.bg-primary #{departureDate.toLocaleString()}
          .card-body
            .row
              .col-md-8
                h5 From: #{ride.pickup_location}
                p.mb-2 To: #{ride.dropoff_location}
                p.mb-2
                  strong Driver: 
                  a(href=`/users/${ride.driver_id}`) #{ride.driver_name}
                p.mb-2
                  strong Seats Available: 
                  span.badge.bg-success #{ride.seats_available}
                if ride.tags
                  p.mb-0
                    each tag in (ride.tags || '').split(',')
                      if tag.trim()
                        a.badge.bg-secondary.me-1(href=`/rides?tag=${encodeURIComponent(tag.trim())}`)= tag.trim()
              .col-md-4.text-end
                if userId
                  a.btn.btn-primary(href=`/rides/${ride.id}`) View Details
                else
                  button.btn.btn-primary.auth-required(data-ride-id=ride.id data-action='book') View Details
    else
      .col-12
        .alert.alert-info No rides found.
  
  if totalPages > 1
    nav(aria-label='Page navigation')
      ul.pagination.justify-content-center
        li.page-item(class=currentPage <= 1 ? 'disabled' : '')
          a.page-link(href=`/rides?page=${currentPage - 1}${search ? '&search=' + search : ''}${tag ? '&tag=' + tag : ''}`) Previous
        
        - for (let i = 1; i <= totalPages; i++)
          li.page-item(class=i === currentPage ? 'active' : '')
            a.page-link(href=`/rides?page=${i}${search ? '&search=' + search : ''}${tag ? '&tag=' + tag : ''}`)= i
        
        li.page-item(class=currentPage >= totalPages ? 'disabled' : '')
          a.page-link(href=`/rides?page=${currentPage + 1}${search ? '&search=' + search : ''}${tag ? '&tag=' + tag : ''}`) Next

  // Login/Signup Modal
  #authModal.modal.fade(tabindex='-1', aria-labelledby='authModalLabel', aria-hidden='true')
    .modal-dialog.modal-dialog-centered
      .modal-content
        .modal-header
          h5.modal-title#authModalLabel Authentication Required
          button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
        .modal-body
          p.text-center You need to be logged in to access this feature.
          .d-grid.gap-2
            a.btn.btn-primary(href='/users/login') Login
            a.btn.btn-secondary(href='/users/signup') Sign Up
        .modal-footer
          button.btn.btn-secondary(type='button', data-bs-dismiss='modal') Close

block scripts
  script.
    document.addEventListener('DOMContentLoaded', function() {
      // Tag filter change handler
      const tagFilter = document.getElementById('tagFilter');
      if (tagFilter) {
        tagFilter.addEventListener('change', function() {
          const tag = this.value;
          const search = new URLSearchParams(window.location.search).get('search') || '';
          
          if (tag) {
            window.location.href = `/rides?tag=${encodeURIComponent(tag)}${search ? '&search=' + encodeURIComponent(search) : ''}`;
          } else {
            window.location.href = `/rides${search ? '?search=' + encodeURIComponent(search) : ''}`;
          }
        });
      }
      
      // Auth required buttons handler
      const authButtons = document.querySelectorAll('.auth-required');
      const authModal = new bootstrap.Modal(document.getElementById('authModal'));
      
      authButtons.forEach(button => {
        button.addEventListener('click', function() {
          const action = this.getAttribute('data-action');
          const rideId = this.getAttribute('data-ride-id');
          
          // Show the modal
          authModal.show();
          
          // Store the intended action and ride ID for redirect after login
          localStorage.setItem('intended_action', action);
          if (rideId) {
            localStorage.setItem('intended_ride_id', rideId);
          }
        });
      });
    }); 