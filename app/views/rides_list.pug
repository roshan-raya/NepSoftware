extends layout

block content
  .container.py-4
    if user
      // My Offered Rides Section
      .mb-5
        h2.mb-4 
          i.fas.fa-car.me-2
          | My Offered Rides
        if myOfferedRides && myOfferedRides.length > 0
          .row
            each ride in myOfferedRides
              .col-lg-6.mb-4
                .card.h-100.shadow-sm
                  .card-header.bg-white.d-flex.justify-content-between.align-items-center.py-3
                    .d-flex.align-items-center
                      img.rounded-circle.me-2(src=getProfilePhoto(ride.profile_photo) alt=`${ride.driver_name}'s profile photo` width='40' height='40')
                      .d-flex.flex-column
                        h5.mb-0 #{ride.driver_name}
                        small.text-muted Driver
                    - var departureDate = new Date(ride.departure_time)
                    span.badge.bg-primary.fs-6 #{departureDate.toLocaleString()}
                  .card-body
                    .row.g-3
                      .col-md-8
                        .d-flex.align-items-center.mb-2
                          i.fas.fa-map-marker-alt.text-danger.me-2
                          h5.mb-0 From: #{ride.pickup_location}
                        .d-flex.align-items-center.mb-2
                          i.fas.fa-flag-checkered.text-success.me-2
                          h5.mb-0 To: #{ride.dropoff_location}
                        .d-flex.align-items-center.mb-2
                          i.fas.fa-clock.text-primary.me-2
                          small Departure: #{departureDate.toLocaleTimeString()}
                        if ride.tags
                          .d-flex.flex-wrap.gap-1.mt-2
                            each tag in (ride.tags || '').split(',')
                              if tag.trim()
                                a.badge.bg-light.text-dark.text-decoration-none(href=`/rides?tag=${encodeURIComponent(tag.trim())}`)= tag.trim()
                      .col-md-4.text-end
                        .d-flex.flex-column.justify-content-between.h-100
                          .mb-3
                            span.badge.bg-success.fs-6
                              i.fas.fa-chair.me-1
                              | #{ride.seats_available} seats left
                          .d-flex.gap-2
                            a.btn.btn-primary.flex-grow-1(href=`/rides/${ride.id}`)
                              i.fas.fa-info-circle.me-2
                              | View Details
                            button.btn.btn-danger.delete-ride(data-ride-id=ride.id)
                              i.fas.fa-trash
        else
          .alert.alert-info
            i.fas.fa-info-circle.me-2
            | You haven't offered any rides yet.

      // My Booked Rides Section
      .mb-5
        h2.mb-4
          i.fas.fa-ticket-alt.me-2
          | My Booked Rides
        if myBookedRides && myBookedRides.length > 0
          .row
            each ride in myBookedRides
              .col-lg-6.mb-4
                .card.h-100.shadow-sm
                  .card-header.bg-white.d-flex.justify-content-between.align-items-center.py-3
                    .d-flex.align-items-center
                      img.rounded-circle.me-2(src=getProfilePhoto(ride.profile_photo) alt=`${ride.driver_name}'s profile photo` width='40' height='40')
                      .d-flex.flex-column
                        h5.mb-0 #{ride.driver_name}
                        small.text-muted Driver
                    - var departureDate = new Date(ride.departure_time)
                    span.badge.bg-primary.fs-6 #{departureDate.toLocaleString()}
                  .card-body
                    .row.g-3
                      .col-md-8
                        .d-flex.align-items-center.mb-2
                          i.fas.fa-map-marker-alt.text-danger.me-2
                          h5.mb-0 From: #{ride.pickup_location}
                        .d-flex.align-items-center.mb-2
                          i.fas.fa-flag-checkered.text-success.me-2
                          h5.mb-0 To: #{ride.dropoff_location}
                        .d-flex.align-items-center.mb-2
                          i.fas.fa-clock.text-primary.me-2
                          small Departure: #{departureDate.toLocaleTimeString()}
                        if ride.tags
                          .d-flex.flex-wrap.gap-1.mt-2
                            each tag in (ride.tags || '').split(',')
                              if tag.trim()
                                a.badge.bg-light.text-dark.text-decoration-none(href=`/rides?tag=${encodeURIComponent(tag.trim())}`)= tag.trim()
                      .col-md-4.text-end
                        .d-flex.flex-column.justify-content-between.h-100
                          .mb-3
                            span.badge.bg-info.fs-6
                              i.fas.fa-check-circle.me-1
                              | Booked
                          a.btn.btn-primary.w-100(href=`/rides/${ride.id}`)
                            i.fas.fa-info-circle.me-2
                            | View Details
        else
          .alert.alert-info
            i.fas.fa-info-circle.me-2
            | You haven't booked any rides yet.

    // Available Rides Section
    .d-flex.justify-content-between.align-items-center.mb-4
      h1.display-4 Available Rides
      a.btn.btn-primary(href='/rides/new')
        i.fas.fa-plus.me-2
        | Offer a Ride
    
    .row.mb-4
      .col-md-8
        form(action='/rides', method='GET').d-flex.gap-2
          .input-group
            span.input-group-text
              i.fas.fa-search
            input.form-control(type='text', name='search', placeholder='Search by location or destination', value=search || '')
            if tag
              input(type='hidden', name='tag', value=tag)
            if category
              input(type='hidden', name='category', value=category)
            if status
              input(type='hidden', name='status', value=status)
            if preferences
              input(type='hidden', name='preferences', value=preferences)
            button.btn.btn-primary(type='submit')
              i.fas.fa-search.me-2
              | Search
            if search
              a.btn.btn-outline-secondary(href=`/rides${tag ? '?tag=' + tag : ''}${category ? '&category=' + category : ''}${status ? '&status=' + status : ''}${preferences ? '&preferences=' + preferences : ''}`)
                i.fas.fa-times
      .col-md-4
        .d-flex.justify-content-end.gap-2
          if tag || category || status || preferences
            a.btn.btn-outline-secondary(href=`/rides${search ? '?search=' + search : ''}`)
              i.fas.fa-times.me-2
              | Clear Filters
    
    // Filters
    .row.mb-4
      .col-md-3.mb-2
        label.form-label.fw-bold Tags
        select.form-select(id='tagFilter')
          option(value='') All Tags
          each tagOption in tags || []
            option(value=tagOption, selected=tag === tagOption)= tagOption
      
      .col-md-3.mb-2
        label.form-label.fw-bold Category
        select.form-select(id='categoryFilter')
          option(value='') All Categories
          each categoryOption in categories || []
            option(value=categoryOption.category, selected=category === categoryOption.category)= categoryOption.category
      
      .col-md-3.mb-2
        label.form-label.fw-bold Status
        select.form-select(id='statusFilter')
          option(value='') All Statuses
          option(value='Available', selected=status === 'Available') Available
          option(value='Full', selected=status === 'Full') Full
          option(value='Completed', selected=status === 'Completed') Completed
      
      .col-md-3.mb-2
        label.form-label.fw-bold Preferences
        select.form-select(id='preferencesFilter')
          option(value='') All Preferences
          each prefOption in availablePreferences || []
            option(value=prefOption.preference, selected=preferences === prefOption.preference)= prefOption.preference
    
    .row
      each ride in rides
        .col-lg-6.mb-4
          .card.h-100.shadow-sm
            .card-header.bg-white.d-flex.justify-content-between.align-items-center.py-3
              .d-flex.align-items-center
                img.rounded-circle.me-2(src=getProfilePhoto(ride.profile_photo) alt=`${ride.driver_name}'s profile photo` width='40' height='40')
                .d-flex.flex-column
                  h5.mb-0 #{ride.driver_name}
                  small.text-muted Driver
              - var departureDate = new Date(ride.departure_time)
              span.badge.bg-primary.fs-6 #{departureDate.toLocaleString()}
            .card-body
              .row.g-3
                .col-md-8
                  .d-flex.align-items-center.mb-2
                    i.fas.fa-map-marker-alt.text-danger.me-2
                    h5.mb-0 From: #{ride.pickup_location}
                  .d-flex.align-items-center.mb-2
                    i.fas.fa-flag-checkered.text-success.me-2
                    h5.mb-0 To: #{ride.dropoff_location}
                  .d-flex.align-items-center.mb-2
                    i.fas.fa-clock.text-primary.me-2
                    small Departure: #{departureDate.toLocaleTimeString()}
                  
                  // Category and Status badges
                  .d-flex.gap-2.mb-2
                    if ride.category
                      a.badge.bg-info.text-decoration-none(href=`/rides?category=${encodeURIComponent(ride.category)}`)
                        i.fas.fa-folder.me-1
                        | #{ride.category}
                    if ride.status
                      span.badge(class=ride.status === 'Available' ? 'bg-success' : (ride.status === 'Full' ? 'bg-warning' : 'bg-secondary'))
                        i.fas.fa-info-circle.me-1
                        | #{ride.status}
                  
                  // Tags
                  if ride.tags
                    .d-flex.flex-wrap.gap-1.mt-2
                      each tag in (ride.tags || '').split(',')
                        if tag.trim()
                          a.badge.bg-light.text-dark.text-decoration-none(href=`/rides?tag=${encodeURIComponent(tag.trim())}`)
                            i.fas.fa-tag.me-1
                            | #{tag.trim()}
                  
                  // Preferences
                  if ride.preferences
                    .d-flex.flex-wrap.gap-1.mt-2
                      each pref in (ride.preferences || '').split(',')
                        if pref.trim()
                          a.badge.bg-light.text-dark.text-decoration-none(href=`/rides?preferences=${encodeURIComponent(pref.trim())}`)
                            i.fas.fa-star.me-1
                            | #{pref.trim()}
                
                .col-md-4.text-end
                  .d-flex.flex-column.justify-content-between.h-100
                    .mb-3
                      span.badge.bg-success.fs-6
                        i.fas.fa-chair.me-1
                        | #{ride.seats_available} seats left
                    a.btn.btn-primary.w-100(href=`/rides/${ride.id}`)
                      i.fas.fa-info-circle.me-2
                      | View Details
      else
        .col-12
          .alert.alert-info.d-flex.align-items-center
            i.fas.fa-info-circle.me-2
            | No rides found matching your criteria.
    
    if totalPages > 1
      nav.mt-4(aria-label='Page navigation')
        ul.pagination.justify-content-center
          li.page-item(class=currentPage <= 1 ? 'disabled' : '')
            a.page-link(href=`/rides?page=${currentPage - 1}${search ? '&search=' + search : ''}${tag ? '&tag=' + tag : ''}${category ? '&category=' + category : ''}${status ? '&status=' + status : ''}${preferences ? '&preferences=' + preferences : ''}`)
              i.fas.fa-chevron-left.me-1
              | Previous
          
          - for (let i = 1; i <= totalPages; i++)
            li.page-item(class=i === currentPage ? 'active' : '')
              a.page-link(href=`/rides?page=${i}${search ? '&search=' + search : ''}${tag ? '&tag=' + tag : ''}${category ? '&category=' + category : ''}${status ? '&status=' + status : ''}${preferences ? '&preferences=' + preferences : ''}`)= i
          
          li.page-item(class=currentPage >= totalPages ? 'disabled' : '')
            a.page-link(href=`/rides?page=${currentPage + 1}${search ? '&search=' + search : ''}${tag ? '&tag=' + tag : ''}${category ? '&category=' + category : ''}${status ? '&status=' + status : ''}${preferences ? '&preferences=' + preferences : ''}`)
              | Next
              i.fas.fa-chevron-right.ms-1

block scripts
  script.
    // Filter handling
    document.getElementById('tagFilter').addEventListener('change', function() {
      updateFilters('tag', this.value);
    });
    
    document.getElementById('categoryFilter').addEventListener('change', function() {
      updateFilters('category', this.value);
    });
    
    document.getElementById('statusFilter').addEventListener('change', function() {
      updateFilters('status', this.value);
    });
    
    document.getElementById('preferencesFilter').addEventListener('change', function() {
      updateFilters('preferences', this.value);
    });
    
    function updateFilters(param, value) {
      const urlParams = new URLSearchParams(window.location.search);
      
      // If value is empty, remove the parameter
      if (!value) {
        urlParams.delete(param);
      } else {
        urlParams.set(param, value);
      }
      
      window.location.href = '/rides?' + urlParams.toString();
    }
    
    // Add event listener for search form submission
    document.querySelector('form').addEventListener('submit', function(e) {
      const searchInput = this.querySelector('input[name="search"]');
      if (!searchInput.value.trim()) {
        e.preventDefault();
        alert('Please enter a search term');
      }
    });
    
    // Add event listeners for delete ride buttons
    document.querySelectorAll('.delete-ride').forEach(button => {
      button.addEventListener('click', function() {
        const rideId = this.getAttribute('data-ride-id');
        if (confirm('Are you sure you want to delete this ride? This action cannot be undone.')) {
          fetch(`/rides/${rideId}/delete`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          })
          .then(response => {
            if (response.ok) {
              window.location.reload();
            } else {
              return response.text().then(text => {
                throw new Error(text || 'Failed to delete ride');
              });
            }
          })
          .catch(error => {
            alert(error.message);
          });
        }
      });
    }); 