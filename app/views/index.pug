doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Campus Ride Sharing - NepSoftware
    meta(name="description", content="Convenient, affordable, and eco-friendly rides around campus and beyond.")
    link(rel="stylesheet", href="styles/main.css")
    link(rel="stylesheet", href="styles/help.css")
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css")
  
  body
    .ride-share-app
      header.header
        .logo-container
          h1.logo NepSoftware
        nav.nav
          ul.nav-list
            li.nav-item
              a.nav-link(href="/") Home
            li.nav-item
              a.nav-link#rides-link(href="#") Rides
            li.nav-item
              a.nav-link#profile-link(href="#") Profile
            li.nav-item
              a.nav-link(href="#help-section") Help
            if locals.userId
              li.nav-item
                button.btn.btn-danger#logout-btn Logout

      // Auth Modal
      .auth-modal#auth-modal
        .auth-container
          button.auth-close#auth-close &times;

          .auth-tabs
            .auth-tab.active#login-tab Login
            .auth-tab#signup-tab Sign Up

          form.auth-form.active#login-form
            .form-group
              label(for="login-email") Email
              input#login-email(type="email", placeholder="Enter your email", required)
            .form-group
              label(for="login-password") Password
              input#login-password(type="password", placeholder="Enter your password", required)
            button.auth-btn(type="submit") Login
            .auth-forgot
              a(href="#") Forgot password?

          form.auth-form#signup-form(enctype="multipart/form-data")
            .form-group
              label(for="signup-name") Full Name
              input#signup-name(type="text", placeholder="Enter your full name", required)
            .form-group
              label(for="signup-email") Email
              input#signup-email(type="email", placeholder="Enter your Roehampton email", required)
              small.text-muted Must be a valid @roehampton.ac.uk email
            .form-group
              label(for="signup-password") Password
              input#signup-password(type="password", placeholder="Create a password (min 6 characters)", required)
            .form-group
              label(for="signup-confirm") Confirm Password
              input#signup-confirm(type="password", placeholder="Confirm your password", required)
            .form-group
              label(for="signup-photo") Profile Picture
              .profile-photo-container
                .profile-photo-wrapper
                  img#photo-preview(src="/static/images/profiles/default.jpg", alt="Profile photo preview")
                  .edit-overlay
                    i.fas.fa-pencil-alt
                input#signup-photo(type="file", name="photo", accept="image/*", style="display: none;")
                p.photo-hint Supported formats: JPG, PNG, GIF (max 5MB)
            button.auth-btn(type="submit") Sign Up

      // Auth Required Message
      if authRequired
        .auth-required-message
          p Please login or sign up to access rides.

      section.hero
        .hero-content
          h2.hero-title Campus Ride Sharing
          h3.hero-subtitle Roehampton University of London
          p.hero-description Convenient, affordable, and eco-friendly rides around campus and beyond.
          .button-group
            button.btn.btn-primary#book-ride-btn Book a Ride
            button.btn.btn-secondary#offer-ride-btn Offer a Ride

      section.colleges
        h2.section-title Our Colleges
        .colleges-container
          .college
            .college-icon.whitelands
            h3.college-name Whitelands College
            p.college-info Founded in 1841, the oldest college of the university.
          .college
            .college-icon.southlands
            h3.college-name Southlands College
            p.college-info Founded in 1872, with Methodist ethos and values.
          .college
            .college-icon.digby
            h3.college-name Digby Stuart College
            p.college-info Founded in 1874, with Catholic tradition.
          .college
            .college-icon.froebel
            h3.college-name Froebel College
            p.college-info Founded in 1892, focuses on education and childhood studies.

      section.how-it-works
        h2.section-title How It Works
        .steps-container
          .step
            .step-icon 1
            h3.step-title Request
            p.step-description Enter your pickup location and destination
          .step
            .step-icon 2
            h3.step-title Match
            p.step-description Get matched with a driver heading your way
          .step
            .step-icon 3
            h3.step-title Ride
            p.step-description Track your ride and enjoy the journey
          .step
            .step-icon 4
            h3.step-title Pay
            p.step-description Easy payment through the app

      section.popular-routes
        h2.section-title Popular Routes
        .routes-container
          .route-card
            h3.route-title Campus to Putney Station
            p.route-info Distance: 2.5 miles
            p.route-info Avg. Price: £4
            a.btn.btn-small(href="/rides") Find Rides
          .route-card
            h3.route-title Campus to Richmond Park
            p.route-info Distance: 3.2 miles
            p.route-info Avg. Price: £5
            a.btn.btn-small(href="/rides") Find Rides
          .route-card
            h3.route-title Roehampton to Kingston
            p.route-info Distance: 4.8 miles
            p.route-info Avg. Price: £6.50
            a.btn.btn-small(href="/rides") Find Rides
        .view-all-routes
          a.btn.btn-large(href="/rides") View All Available Rides

      section.testimonials
        h2.section-title What Students Say
        .testimonials-container
          .testimonial
            p.testimonial-text "NepSoftware made getting to my early lectures so much easier. No more waiting for buses!"
            p.testimonial-author - Emma, Business Studies
          .testimonial
            p.testimonial-text "I save money and time, plus I've met some great people from other courses."
            p.testimonial-author - James, Computer Science

      section.help-section#help-section
        h2.section-title Need Help?
        .help-container
          .help-card
            i.fas.fa-question-circle.help-icon
            h3.help-title Frequently Asked Questions
            p.help-description Find answers to common questions about our ride sharing service.
            button.btn.btn-primary.help-btn#faq-btn View FAQs
          .help-card
            i.fas.fa-headset.help-icon
            h3.help-title Contact Support
            p.help-description Our support team is available 24/7 to assist you.
            button.btn.btn-primary.help-btn#contact-btn Contact Us
          .help-card
            i.fas.fa-book.help-icon
            h3.help-title User Guide
            p.help-description Learn how to make the most of our platform.
            button.btn.btn-primary.help-btn#guide-btn Read Guide

        // Help Modal
        .help-modal#help-modal
          .help-modal-content
            button.help-close#help-close &times;
            .help-modal-body
              #faq-content.help-content
                h3 Frequently Asked Questions
                .faq-item
                  h4 How do I book a ride?
                  p To book a ride, click the "Book a Ride" button and enter your pickup and drop-off locations. You'll be matched with available drivers.
                .faq-item
                  h4 How do I pay for rides?
                  p Payment is processed securely through the app. You can add your payment method in your profile settings.
                .faq-item
                  h4 What if my driver doesn't show up?
                  p Contact our support team immediately, and we'll help you find an alternative ride.
              
              #contact-content.help-content(style="display: none;")
                h3 Contact Support
                form.contact-form
                  .form-group
                    label(for="contact-name") Your Name
                    input#contact-name(type="text", required)
                  .form-group
                    label(for="contact-email") Email
                    input#contact-email(type="email", required)
                  .form-group
                    label(for="contact-subject") Subject
                    input#contact-subject(type="text", required)
                  .form-group
                    label(for="contact-message") Message
                    textarea#contact-message(required)
                  button.btn.btn-primary(type="submit") Send Message
              
              #guide-content.help-content(style="display: none;")
                h3 User Guide
                .guide-section
                  h4 Getting Started
                  p 1. Create an account using your Roehampton email
                  p 2. Complete your profile with a photo and basic information
                  p 3. Add a payment method in your profile settings
                .guide-section
                  h4 Booking a Ride
                  p 1. Click "Book a Ride" on the homepage
                  p 2. Enter your pickup and drop-off locations
                  p 3. Select your preferred ride option
                  p 4. Confirm your booking
                .guide-section
                  h4 Offering a Ride
                  p 1. Click "Offer a Ride" on the homepage
                  p 2. Set your route and available seats
                  p 3. Set your price per seat
                  p 4. Publish your ride

      footer.footer
        .footer-content
          .footer-section
            h3.footer-title NepSoftware
            p.footer-text Roehampton University of London, UK
            p.footer-text Making campus travel easier.
          .footer-section
            h3.footer-title Contact
            p.footer-text Email: info@nepsoftware.com
            p.footer-text Phone: +44 20 1234 5678
          .footer-section
            h3.footer-title Links
            ul.footer-links
              li
                a(href="/about") About Us
              li
                a(href="/safety") Safety
              li
                a(href="/terms") Terms & Conditions
              li
                a(href="/privacy") Privacy Policy
        .footer-bottom
          p &copy; 2023 NepSoftware - Roehampton University. All rights reserved.

    script.
      document.addEventListener('DOMContentLoaded', function() {
        // Auth modal elements
        const authModal = document.getElementById('auth-modal');
        const authClose = document.getElementById('auth-close');
        const loginTab = document.getElementById('login-tab');
        const signupTab = document.getElementById('signup-tab');
        const loginForm = document.getElementById('login-form');
        const signupForm = document.getElementById('signup-form');
        const profileLink = document.getElementById('profile-link');
        const bookRideBtn = document.getElementById('book-ride-btn');
        const logoutBtn = document.getElementById('logout-btn');
        const ridesLink = document.getElementById('rides-link');
        const photoInput = document.getElementById('signup-photo');
        const photoPreview = document.getElementById('photo-preview');
        const photoWrapper = document.querySelector('.profile-photo-wrapper');
        const offerRideBtn = document.getElementById('offer-ride-btn');
        
        // Check if user is logged in
        const isLoggedIn = #{!!locals.userId};
        
        // Update profile link if logged in
        if (isLoggedIn) {
          profileLink.textContent = `Welcome, #{locals.userName || 'User'}`;
          profileLink.href = `/users/#{locals.userId}`;
          ridesLink.href = '/rides';
        }
        
        // Handle photo upload preview
        photoWrapper.addEventListener('click', function() {
          photoInput.click();
        });

        photoInput.addEventListener('change', function(e) {
          const file = e.target.files[0];
          if (file) {
            // Validate file type
            if (!file.type.match('image.*')) {
              alert('Please select an image file (JPG, PNG, or GIF)');
              this.value = '';
              return;
            }
            
            // Validate file size (5MB)
            if (file.size > 5 * 1024 * 1024) {
              alert('File size must be less than 5MB');
              this.value = '';
              return;
            }

            // Show preview
            const reader = new FileReader();
            reader.onload = function(e) {
              photoPreview.src = e.target.result;
            };
            reader.readAsDataURL(file);
          }
        });
        
        // Rides link click handler
        ridesLink.addEventListener('click', function(e) {
          if (!isLoggedIn) {
            e.preventDefault();
            // Show auth modal
            authModal.classList.add('active');
            // Switch to login tab
            loginTab.classList.add('active');
            signupTab.classList.remove('active');
            loginForm.classList.add('active');
            signupForm.classList.remove('active');
          }
        });
        
        // Book a ride button click handler
        bookRideBtn.addEventListener('click', function() {
          if (isLoggedIn) {
            // If logged in, redirect to rides page
            window.location.href = '/rides';
          } else {
            // If not logged in, show auth modal
            authModal.classList.add('active');
            // Switch to login tab
            loginTab.classList.add('active');
            signupTab.classList.remove('active');
            loginForm.classList.add('active');
            signupForm.classList.remove('active');
            
            // Store intended action for redirect after login
            localStorage.setItem('intended_action', 'book');
          }
        });
        
        // Offer a ride button click handler
        offerRideBtn.addEventListener('click', function() {
          if (isLoggedIn) {
            // If logged in, redirect to offer ride page
            window.location.href = '/rides/offer';
          } else {
            // If not logged in, show auth modal
            authModal.classList.add('active');
            // Switch to login tab
            loginTab.classList.add('active');
            signupTab.classList.remove('active');
            loginForm.classList.add('active');
            signupForm.classList.remove('active');
            
            // Store intended action for redirect after login
            localStorage.setItem('intended_action', 'offer');
          }
        });
        
        // Logout button click handler
        if (logoutBtn) {
          logoutBtn.addEventListener('click', function() {
            fetch('/users/logout', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              }
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                alert('Logout successful!');
                window.location.reload();
              } else {
                alert(data.error || 'Logout failed. Please try again.');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              alert('An error occurred during logout. Please try again.');
            });
          });
        }
        
        // Close auth modal
        authClose.addEventListener('click', function() {
          authModal.classList.remove('active');
        });
        
        // Switch between login and signup tabs
        loginTab.addEventListener('click', function() {
          loginTab.classList.add('active');
          signupTab.classList.remove('active');
          loginForm.classList.add('active');
          signupForm.classList.remove('active');
        });
        
        signupTab.addEventListener('click', function() {
          signupTab.classList.add('active');
          loginTab.classList.remove('active');
          signupForm.classList.add('active');
          loginForm.classList.remove('active');
        });
        
        // Handle login form submission
        loginForm.addEventListener('submit', function(e) {
          e.preventDefault();
          
          const email = document.getElementById('login-email').value;
          const password = document.getElementById('login-password').value;
          const submitButton = loginForm.querySelector('button[type="submit"]');
          
          // Disable the submit button and show loading state
          submitButton.disabled = true;
          submitButton.textContent = 'Logging in...';
          
          // Send login request
          fetch('/users/login', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email, password })
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              alert('Login successful! Welcome back.');
              authModal.classList.remove('active');
              // Update UI to show logged in state
              profileLink.textContent = `Welcome, ${data.user.name}`;
              profileLink.href = `/users/${data.user.id}`;
              ridesLink.href = '/rides';
              
              // Check if we need to redirect based on localStorage data
              const intendedAction = localStorage.getItem('intended_action');
              if (intendedAction && data.checkRedirect) {
                const intendedRideId = localStorage.getItem('intended_ride_id');
                
                switch(intendedAction) {
                  case 'offer':
                    window.location.href = '/rides/offer';
                    break;
                  case 'book':
                  case 'request':
                    if (intendedRideId) {
                      window.location.href = `/rides/${intendedRideId}`;
                    } else {
                      window.location.href = '/rides';
                    }
                    break;
                  default:
                    window.location.reload();
                    break;
                }
                
                // Clear the storage
                localStorage.removeItem('intended_action');
                localStorage.removeItem('intended_ride_id');
              } else {
                window.location.reload();
              }
            } else {
              alert(data.error || 'Login failed. Please try again.');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert(error.message || 'An error occurred during login. Please try again.');
          })
          .finally(() => {
            // Re-enable the submit button
            submitButton.disabled = false;
            submitButton.textContent = 'Login';
          });
        });
        
        // Handle signup form submission
        signupForm.addEventListener('submit', async function(e) {
          e.preventDefault();
          
          const name = document.getElementById('signup-name').value;
          const email = document.getElementById('signup-email').value;
          const password = document.getElementById('signup-password').value;
          const confirmPassword = document.getElementById('signup-confirm').value;
          const photoFile = document.getElementById('signup-photo').files[0];
          const submitButton = signupForm.querySelector('button[type="submit"]');
          
          // Validate email domain
          if (!email.endsWith('@roehampton.ac.uk')) {
            alert('Please use a valid Roehampton University email address');
            return;
          }
          
          // Validate password length
          if (password.length < 6) {
            alert('Password must be at least 6 characters long');
            return;
          }
          
          // Validate passwords match
          if (password !== confirmPassword) {
            alert('Passwords do not match');
            return;
          }
          
          // Disable submit button and show loading state
          submitButton.disabled = true;
          submitButton.textContent = 'Signing up...';
          
          try {
            // Create FormData object
            const formData = new FormData();
            formData.append('name', name);
            formData.append('email', email);
            formData.append('password', password);
            if (photoFile) {
              formData.append('photo', photoFile);
            }
            
            // Send signup request
            const response = await fetch('/users/signup', {
              method: 'POST',
              body: formData
            });
            
            const data = await response.json();
            
            if (data.success) {
              alert('Registration successful! You are now logged in.');
              
              // Check if we need to redirect based on localStorage data
              const intendedAction = localStorage.getItem('intended_action');
              if (intendedAction && data.checkRedirect) {
                const intendedRideId = localStorage.getItem('intended_ride_id');
                
                switch(intendedAction) {
                  case 'offer':
                    window.location.href = '/rides/offer';
                    break;
                  case 'book':
                  case 'request':
                    if (intendedRideId) {
                      window.location.href = `/rides/${intendedRideId}`;
                    } else {
                      window.location.href = '/rides';
                    }
                    break;
                  default:
                    window.location.reload();
                    break;
                }
                
                // Clear the storage
                localStorage.removeItem('intended_action');
                localStorage.removeItem('intended_ride_id');
              } else {
                // Reset form and reload
                signupForm.reset();
                photoPreview.src = '/static/images/profiles/default.jpg';
                window.location.reload();
              }
            } else {
              alert(data.error || 'Registration failed. Please try again.');
            }
          } catch (error) {
            console.error('Error:', error);
            alert('An error occurred during registration. Please try again.');
          } finally {
            // Re-enable submit button
            submitButton.disabled = false;
            submitButton.textContent = 'Sign Up';
          }
        });

        // Help section functionality
        const helpModal = document.getElementById('help-modal');
        const helpClose = document.getElementById('help-close');
        const faqBtn = document.getElementById('faq-btn');
        const contactBtn = document.getElementById('contact-btn');
        const guideBtn = document.getElementById('guide-btn');
        const faqContent = document.getElementById('faq-content');
        const contactContent = document.getElementById('contact-content');
        const guideContent = document.getElementById('guide-content');

        // Help button click handlers
        faqBtn.addEventListener('click', function() {
          helpModal.classList.add('active');
          faqContent.style.display = 'block';
          contactContent.style.display = 'none';
          guideContent.style.display = 'none';
        });

        contactBtn.addEventListener('click', function() {
          helpModal.classList.add('active');
          faqContent.style.display = 'none';
          contactContent.style.display = 'block';
          guideContent.style.display = 'none';
        });

        guideBtn.addEventListener('click', function() {
          helpModal.classList.add('active');
          faqContent.style.display = 'none';
          contactContent.style.display = 'none';
          guideContent.style.display = 'block';
        });

        helpClose.addEventListener('click', function() {
          helpModal.classList.remove('active');
        });

        // Close modal when clicking outside
        window.addEventListener('click', function(event) {
          if (event.target === helpModal) {
            helpModal.classList.remove('active');
          }
        });

        // Handle contact form submission
        const contactForm = document.querySelector('.contact-form');
        if (contactForm) {
          contactForm.addEventListener('submit', function(e) {
            e.preventDefault();
            alert('Thank you for your message! Our support team will get back to you soon.');
            helpModal.classList.remove('active');
            contactForm.reset();
          });
        }

        // Intersection Observer for help section
        const helpSection = document.getElementById('help-section');
        const helpLink = document.querySelector('a[href="#help-section"]');
        
        if (helpSection && helpLink) {
          const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
              if (entry.isIntersecting) {
                helpLink.classList.add('active');
              } else {
                helpLink.classList.remove('active');
              }
            });
          }, { threshold: 0.5 });

          observer.observe(helpSection);
        }
      });